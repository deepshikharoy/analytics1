git config --global user.name "deepshikharoy"
women
mtcars
mtcars
mtcars
x2 <- 3
#assign
x1 = 3
#print values
x1
#assign and print
(x3=3)
?women
mtcars$mpg
mtcars
#help
?mean
xm <- mean(x)
x <- c(0:10, 50)
xm <- mean(x)
#datasets available for use
seq(0,100, by=2)
seq(0,100, by=
(seq1,10, length.out=5)
x=c(0:10, 50:100))
#assign
x1 = 3
x2 <- 3
#print values
x1
x2
#assign and print
(x3=3)
#environment----
#variable is env
1s(9)
#datasets available for use
data()
women
?women
?mtcars
mtcars
mtcars$mpg
#
women
mtcars
data(mtcars)
#help
?mean
xm<- c(0:10, 50)
x
print(x)
xm <- mean(x)
c(xm, mean(x, trim = 0.10))
help(mean)
#libraries currently loaded
library()
#elements
1s()
#datasets available for use
seq(0,100, by=2)
seq(0,100, by=
(seq1,10, length.out=5)
x=c(0:10, 50:100))
rep
print(women)
#test1.R
print(women)
print(mtcars)
iris
plot(women)
source('test1.R')
source('test1.R')
(x1=1:30)
(x2=c(1,2,13,4,5))
#data sturcures in slides
#control+enter when you are in the line to execute
#
#vectors----
x=1:10    #create seq of nos 1 to 10
x
x1 <- 1:20
x1
(x1=1:30)
(x2=c(1,2,13,4,5))
class(x2)
(x3=letters[1:10])
class(x3)
LETTERS[1:26]
(x3b = c('a', "Dhiraj","4"))
class(x3)
(x4=c(T,FALSE,TRUE,T,F))
class(x4)
LETTERS[seq(1,26,2)]
#access element
(x6 = seq(0,100,by=3))
ls() #variable in my env
x6
length(x6)
x6[20]
length(x6)
x6[20]
x6[3]  # access 3rd element
#[1] 4
x6[c(2, 4)]     # access 2nd and 4th element
x6[-1]          # access all but 1st element
x6[-c(1:10, 15:20)]
x6[c(2, -4)]
x6[20]
x6[3]
x6[c(2, 4)]
x6[-1]
(x7 = c(x6, x2))
sort(x6)
sort(x6[-c(1,2)])
set.seed(123)
x[2] <- 10; x        # modify 2nd element
(x = -3:2)
x[2] <- 10; x        # modify 2nd element
#[1] -3  0 -1  0  1  2
#delete vector
(x = seq(1,5, length.out = 15))
#[1] 1.000 1.444 1.889 2.333 2.778 3.222 3.667 4.111 4.556 5.000
x = NULL
(m1 = matrix(100:111, nrow=4))
(m2 = matrix(100:111, ncol=3, byrow=T))
dim(m1)
m1
x=101:124
length(x)
m3=matrix(x, ncol=6)
class(m3)
attributes(m3)
dim(m3)
m1[1,]
m1[c(1,3)]
paste("C",1:100,sep="-")
(colnames(m1) = paste('C',1:3, sep=''))
(rownames(m1) = paste('R',1:4, sep=''))
paste("C","D",sep="-")
paste("C",1:100,sep="-")
addmargins(m1,margin=1,sum) #colwise function
addmargins(m1,1,sd) #colwise function
addmargins(m1,margin=1,sum) #colwise function
round(addmargins(m1,1,sd),2) #colwise function
addmargins(m1,c(1,2),list(list(mean,sum,max), list(var,sd))) #row & col wise function
addmargins(m1,margin=1,sum) #colwise function
#DataFrame----
#create Vectors to be combined into DF
(rollno = 1:30)
(sname = paste('student',1:30,sep=''))
(gender = sample(c('M','F'), size=30, replace=T, prob=c(.7,.3)))
(marks = floor(rnorm(30,mean= 50,sd=10)))
(marks2 = ceiling(rnorm(30,40,5)))
(course = sample(c('BBA','MBA'), size=30, replace=T, prob=c(.5,.5)))
rollno; sname; gender
#create DF
df1= data.frame(rollno, sname, gender, marks, marks2, course, stringsAsFactors = F)
str(df1) #structure of DF
head(df1) #top 6 rows
head(df1,n=3) #top 3 rows
tail(df1) #last 6 rows
class(df1) # DF
summary(df1) #summary
df1$gender = factor(df1$gender)
df1$course = factor(df1$course)
str(df1)
(rollno = 1:30)
(sname = paste('student',1:30,sep=''))
(rollno = 1:30)
(sname = paste('student',1:30,sep=''))
(gender = sample(c('M','F'), size=30, replace=T, prob=c(.7,.3)))
(rollno = 1:30)
(sname = paste('student',1:30,sep=''))
(gender = sample(c('M','F'), size=30, replace=T, prob=c(.7,.3)))
(marks = floor(rnorm(30,mean= 50,sd=10)))
(gender = sample(c('m','f'),size=30,replace=T, prob=c(.7, .3)))
table(gender)
prop.table(table(gender))
(course = sample(c('BBA','MBA','btech'), size=30, replace=T, prob=c(.4,.1,.5)))
(gender = sample(c('M','F'), size=1000, replace=T, prob=c(.7,.3)))
(gender = sample(c('m','f'),size=30,replace=T, prob=c(.7, .3)))
table(gender)
floor(3.4)
floor(3.7)
ceiling(3.4)
trunc(3.4)
round(3.6)
round(3.6,2)
plot(density(x))
signifi(5.67564,3)
signif(5.67564,3)
head(df1) #top 6 rows
str(df1) #structure of DF
#create DF
df1= data.frame(rollno, sname, gender, marks, marks2, course, stringsAsFactors = F)
head(df1,n=3) #top 3 rows
class(df1) # DF
tail(df1) #last 6 rows
summery(x)
summery(x)
quantile(x)
summery(x)
summery(x)
boxplot(x)
quantile(x,seq(0,1,.1))
abline(h=fivenum(x))
df1$gender = factor(df1$gender)
df1$course = factor(df1$course)
summary(df1)
df1$gender = factor(df1$gender)
df1$course = factor(df1$course)
str(df1)
summary(df1)
summary(df1) #summary
df1$gender = factor(df1$gender)
df1$course = factor(df1$course)
str(df1)
summary(df1)
str(df1)
df1[ , c(2,4)] #multiple columns
df1[1:10 ,] #select rows, all columns
df1[ marks > 50 & gender=='F', c(1,2)]
df1[ marks > 50 | gender=='F', ]
df1[ marks > 50 & gender=='F', c(1,2)]
df1[ marks > 50 | gender=='F', ]
df1[ marks > 50 & gender=='F', c('rollno', 'sname','gender', 'marks')]
df1[ marks > 50 & gender=='F', c(1,2)]
df1[ marks > 50 | gender=='F', ]
df1[ marks > 50 & gender=='F', c('rollno', 'sname','gender', 'marks')]
df1[ marks > 50 & gender=='F', c('rollno', 'sname','gender', 'marks')]
df1[ marks > 50 & gender=='F', c(1,2)]
names(df1)  # names of columns
names(df1)  # names of columns
dim(df1)  #Dimensions
library(dplyr)
install.packages("dplyr")
#as per conditionis
df1[ marks > 50 & gender=='F', c('rollno', 'sname','gender', 'marks')]
df1[ marks > 50 & gender=='F', c('rollno', 'sname','gender', 'marks')]
df1  #full data
df1$gender  # one column
df1[ , c(2,4)] #multiple columns
df1[1:10 ,] #select rows, all columns
#as per conditionis
df1[ marks > 50 & gender=='F', c('rollno', 'sname','gender', 'marks')]
library(dplyr)
df1 %>% group_by(gender)
df1 %>% group_by(gender) %>% summarise(mean(marks), mean(marks2))
df1 %>% group_by(course, gender)  %>% summarise(mean(marks), mean(marks2))
df1 %>% gruop_by(course, gender)  %>% count
df1 %>% group_by(gender)  %>% summarise(max(marks), min(marks2))
arrange(mtcars, desc(disp))
# grouped arrange ignores groups
by_cyl <- mtcars %>% group_by(cyl)
by_cyl %>% arrange(desc(wt))
# Unless you specifically ask:
by_cyl %>% arrange(desc(wt), .by_group = TRUE)
# asssign---
x1 = 3
x2 <- 3
#Print Value
x1
x2
x2
x2 <- 3
x2 <- 3
#Print Value
x1
x2
#Print Value
x1
x2
#Assign and Print
(x3=3)
#Discrete Cat Data
(attend = c('A','P','P','A','P','A'))
table(attend)
cbind(table(attend))  # A & P on left side
color=c('Blue','Green','Magenta','Green','Black','Blue','Black')
(x2 = table(color))
(x2a = cbind(x2))
hist(x2a)  # not relevant
barplot(x2a)  # not good
barplot(x2a, beside=T)  # Better
unique(color) ; length(unique(color))
barplot(x2a, beside=T, col=rainbow(length(unique(color))))
pie(x2a)
#Discrete Cat Data
(attend = c('A','P','P','A','P','A'))
#Discrete Cat Data
(attend = c('r','P','P','A','P','A'))
table(attend)
barplot(x2a, beside=T, col=rainbow(length(unique(color))))
barplot(x2a, beside=T, col=unique(color),names.arg = names(x2))
(x2 = table(color))
(x2a = cbind(x2))
hist(x2a)  # not relevant
barplot(x2a)  # not good
barplot(x2a, beside=T)  # Better
unique(color) ; length(unique(color))
barplot(x2a, beside=T, col=rainbow(length(unique(color))))
barplot(x2a, beside=T, col=sort(unique(color)), names.arg=names(x2)
color=c('blue','green','blue','magenta','blue','green', 'magenta','black','blue','black')
color=c('blue','green','blue','magenta','blue','green', 'magenta','black','blue','black')
#Continuous Data
set.seed(1234)
x3 = runif(100,0,150)  # 0 to 150 marks range, 100 values
x3
# Divide range into step of 15 ie 10 levels
breaks = seq(0,150,by=15)
breaks
length(breaks)
#x3[1] = 60; x3[2] = 75
x3.cut = cut(x3, breaks)
x3.cut
table(x3.cut)
cbind(table(x3.cut))  #see it vertically
#give intervals a character values a, b..
(x3.cut = cut(x3, breaks, labels=letters[1:10]))
hist(x3,break=15,col=1:15)
#plot these freq Table: which is better
hist(x3b)
color=c('blue','green','blue','magenta','blue','green', 'magenta','black','blue','black')
(x2 = table(color))
(x2a = cbind(x2))
hist(x2a)  # not relevant
barplot(x2a)  # not good
barplot(x2a, beside=T)  # Better
unique(color) ; length(unique(color))
barplot(x2a, beside=T, col=rainbow(length(unique(color))))
barplot(x2a, beside=T, col=sort(unique(color)), names.arg=names(x2))
pie(x2a)
#Continuous Data
set.seed(1234)
x3 = runif(100,0,150)  # 0 to 150 marks range, 100 values
x3
x3 = ceiling(x3)  #round to higher value
x3 = ceiling(x3)  #round to higher value
x3
range(x3)
# Divide range into step of 15 ie 10 levels
breaks = seq(0,150,by=15)
breaks
length(breaks)
x3
#x3[1] = 60; x3[2] = 75
x3.cut = cut(x3, breaks)
x3.cut
table(x3.cut)
cbind(table(x3.cut))  #see it vertically
#give intervals a character values a, b..
(x3.cut = cut(x3, breaks, labels=letters[1:10]))
#(x3.cut = cut(x3, breaks, labels=letters[1:length(breaks)-1]))
x3.cut
(x3a = table(x3.cut))
#my self
x = rnorm(5)
plot(x)
> age <- c(1,3,5,2,11,9,3,9,12,3)
age <- c(1,3,5,2,11,9,3,9,12,3)
weight <- c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
mean(weight)
sd(weight)
cor(age,weight)
plot(age,weight)
q()
(p1 = predict( fit1,newdata=new ))
cbind(new,p1)
